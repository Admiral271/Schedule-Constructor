@using Schedule_Constructor.Models.DataModels
@{
    var groups = ViewBag.Groups as List<Group>;
    var allSubjects = ViewBag.AllSubjects as List<Subject>;
    var selectedGroup = ViewBag.Group as Group;
    var startDate = ViewBag.StartDate as DateTime?;
    var endDate = ViewBag.EndDate as DateTime?;
    int daysInWeek = 6;
    string[] daysOfWeek = new string[] { "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота" };
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<h2>Конструктор расписания</h2>

@if (selectedGroup == null)
{
    <form method="post" action="@Url.Action("Schedule", "ScheduleAdd")">
        <div class="form-group">
            <label for="group">Выберите группу:</label>
            <select id="group" name="group" class="form-control">
                @foreach (var group in groups)
                {
                    <option value="@group.Id">@group.Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="startDate">Начальная дата:</label>
            <input type="date" id="startDate" name="startDate" class="form-control" />
        </div>
        <div class="form-group">
            <label for="endDate">Конечная дата:</label>
            <input type="date" id="endDate" name="endDate" class="form-control" />
        </div>
        <br />
        <button type="submit" class="btn btn-danger">Создать расписание</button>
    </form>
}
else
{
    <h3>Группа: @selectedGroup.Name</h3>

    @if (startDate.HasValue && endDate.HasValue)
    {
        <h4>Диапазон дат: @startDate.Value.ToString("dd.MM.yyyy") - @endDate.Value.ToString("dd.MM.yyyy")</h4>

        <table class="table">
            <thead>
                <tr>
                    <th>Дата</th>
                    <th>1 пара</th>
                    <th>2 пара</th>
                    <th>3 пара</th>
                    <th>4 пара</th>
                </tr>
            </thead>
            <tbody>
                @for (DateTime date = startDate.Value; date <= endDate.Value; date = date.AddDays(1))
                {
                    if (date.DayOfWeek != DayOfWeek.Sunday)
                    {
                        int dayOfWeek = (int)date.DayOfWeek;
                        <tr>
                            <td>@date.ToString("dd.MM.yyyy") (@daysOfWeek[dayOfWeek - 1])</td>
                            @for (int lessonNumber = 0; lessonNumber < 4; lessonNumber++)
                            {
                                string selectName = $"schedule[{date.ToString("yyyy-MM-dd")}][{lessonNumber}]";
                                <td>
                                    @{
                                        string onchangeAttribute = "onchange=\"updateSchedule(this)\"";
                                    }
                                    <select class="form-control" name="@selectName" @Html.Raw(onchangeAttribute)>
                                        <option class="unselected" value=""></option>
                                        @foreach (var subject in allSubjects)
                                        {
                                            <option value="@subject.Id">@subject.Name (@subject.Teacher)</option>
                                        }
                                    </select>

                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>

        <button id="send-button" class="btn btn-danger">Сохранить</button>

        <script>
            // Сбор данных
            function collectScheduleData() {
                var scheduleData = [];
                var selects = document.querySelectorAll('select[name^="schedule"]');
                for (var i = 0; i < selects.length; i++) {
                    var select = selects[i];
                    var date = select.name.split('[')[1].slice(0, -1);
                    var lessonNumber = select.name.split('[')[2].slice(0, -1);
                    var subjectId = select.value || "0"; // Установка значения subjectId в 0 для пустых занятий
                    scheduleData.push({
                        date: date,
                        lessonNumber: lessonNumber,
                        subjectId: subjectId
                    });
                }
                return scheduleData;
            }

            // Отправка данных на сервер
            function sendScheduleData(scheduleData) {
                var groupId = @selectedGroup.Id;
                var data = { group: groupId, scheduleData: scheduleData };
                $.ajax({
                    type: 'POST',
                    url: '/ScheduleAdd/Save',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        window.location.href = '/ScheduleAdd';
                    }
                });
            }

            // Кнопка для отправки данных
            $('#send-button').on('click', function () {
                var scheduleData = collectScheduleData();
                sendScheduleData(scheduleData);
            });

            // Проверка доступности преподавателя
            function updateSchedule(selectElement) {
                var date = selectElement.name.split('[')[1].slice(0, -1);
                var lessonNumber = selectElement.name.split('[')[2].slice(0, -1);
                var subjectId = selectElement.value;
                var teacher = selectElement.options[selectElement.selectedIndex].text.split('(')[1].slice(0, -1);

                // Проверка, назначен ли выбранный преподаватель уже другой группе в то же время
                $.get('/ScheduleAdd/CheckTeacherAvailability', { date: date, lessonNumber: lessonNumber, teacher: teacher }, function (data) {
                    if (data.isAvailable == false) {
                        var groups = data.groups.join(', ');
                        alert(`Предупреждение: ${teacher} уже проводит занятие у другой группы (${groups}) в это время.`);
                    }
                });
            }
        </script>
    }
}

