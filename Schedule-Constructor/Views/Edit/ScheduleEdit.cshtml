@model IEnumerable<Schedule_Constructor.Models.DataModels.Schedule>
@{
    var groups = ViewBag.Groups as List<Schedule_Constructor.Models.DataModels.Group>;
    var allSubjects = ViewBag.AllSubjects as List<Schedule_Constructor.Models.DataModels.Subject>;
    var selectedGroup = ViewBag.SelectedGroup as Schedule_Constructor.Models.DataModels.Group;
}

@{
    ViewData["Title"] = "Редактирование расписания";
}

<h1>Редактирование расписания</h1>

<h4>Расписание</h4>
<hr />

<h3>Группа: @selectedGroup.Name_Group</h3>

<form id="scheduleEditForm" asp-action="ScheduleEdit" asp-route-groupId="@selectedGroup.Id_Group">
    <input type="hidden" name="groupId" value="@selectedGroup.Id_Group" />
    <table class="table">
        <thead>
            <tr>
                <th>Дата</th>
                <th>1 пара</th>
                <th>2 пара</th>
                <th>3 пара</th>
                <th>4 пара</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var schedule in Model.GroupBy(s => s.Date))
            {
                var date = schedule.Key;
                if (date.DayOfWeek != DayOfWeek.Sunday)
                {
                    <tr>
                        <td>@date.ToString("dd.MM.yyyy")</td>
                        @for (int lessonNumber = 0; lessonNumber < 4; lessonNumber++)
                        {
                            string selectName = $"scheduleData[{date.ToString("yyyy-MM-dd")}][{lessonNumber}].SubjectId";
                            string dateName = $"scheduleData[{date.ToString("yyyy-MM-dd")}][{lessonNumber}].Date";
                            string lessonNumberName = $"scheduleData[{date.ToString("yyyy-MM-dd")}][{lessonNumber}].LessonNumber";
                            var lessonSchedule = schedule.FirstOrDefault(s => s.LessonNumber == lessonNumber);
                            <td>
                                <select class="form-control" name="@selectName">
                                    <option value=""></option>
                                    @foreach (var subject in allSubjects)
                                    {
                                        <option value="@subject.Id_Subject" selected="@(lessonSchedule != null && lessonSchedule.SubjectId == subject.Id_Subject)">
                                            @subject.Name_Subject (@subject.Teacher)
                                        </option>
                                    }
                                </select>

                                <input type="hidden" name="@dateName" value="@date.ToString("yyyy-MM-dd")" />
                                <input type="hidden" name="@lessonNumberName" value="@lessonNumber" />
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>

    <div class="form-group">
        <input type="submit" value="Сохранить" class="btn btn-danger" />
        <a asp-action="Schedules" class="btn btn-primary">Назад к списку</a>
    </div>
</form>

<!-- add this script block at the bottom of your view -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // get all select elements
        var selects = document.querySelectorAll("select[name^='scheduleData']");

        // add change event listener to each select element
        selects.forEach(function (select) {
            select.addEventListener("change", function (event) {
                // get selected subject id
                var subjectId = event.target.value;

                // get date and lesson number from select name attribute
                var match = event.target.name.match(/scheduleData\[(.+)\]\[(\d+)\]/);
                var date = match[1];
                var lessonNumber = parseInt(match[2]);

                // get group id from hidden input
                var groupId = document.querySelector("input[name='groupId']").value;

                // send ajax request to check for conflicts
                var xhr = new XMLHttpRequest();
                xhr.open("GET", `/Edit/CheckConflicts?groupId=${groupId}&date=${date}&lessonNumber=${lessonNumber}&subjectId=${subjectId}`);
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        var response = JSON.parse(xhr.responseText);
                        if (response.hasConflicts) {
                            // display alert message
                            alert(response.message);
                        }
                    }
                };
                xhr.send();
            });
        });
    </script>
}
